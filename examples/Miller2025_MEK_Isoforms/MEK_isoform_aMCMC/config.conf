# Fit MEK pathway variations to demonstrate configuration of PyBNF now using Adaptive MCMC and UQ.

bng_command = /projects/posner_lab/BioNetGen-2.3.1/BNG2.pl


# Specification of model and data to be used
model = MEK1_WT.bngl: WT.prop, WT.exp
model = MEK1_KO.bngl: KO.prop
model = MEK1_N78G.bngl: N78G.prop
model = MEK1_T292A.bngl: T292A.prop
model = MEK1_T292D.bngl: T292D.prop

# Output location for inference files
output_dir = MEK_aMCMC

#Output files for all possible trajectories of model observables given each estimate of parameter values
output_trajectory = MEK_pRDS_WT, scaled_pSOS1, scaled_pEGFR, scaled_pERK, MEK_pRDS_KO, MEK_pRDS_N78G, MEK_pRDS_T292A, MEK_pRDS_T292D 

# Sampling alogithm: Adaptive MCMC
fit_type = am

#Chi sq likelihood function
objfunc = chi_sq_dynamic

#generates one set of parameter estimates per iteration
#Also known as 1 markov chain in MCMC
population_size=1

#how many samples of the posterior will be taken
max_iterations=250000

#burn in time, doesn't count toward UQ
#adaptive algorithms learns the parameter space
#burn in and adaptive should be equal
burn_in=25000
adaptive = 25000

#when samples should be taken in terms of iterations 
sample_every=1

#saving best data
save_best_data = 1

#step_size through defined parameter space
step_size = 0.0001


#Continues next run from previous run's movement proposals
#continue_run = 1

#Adjustable parameters from the model
loguniform_var = d3__FREE 1e-5 1e-1 #degradation of ligand-bound dimer complexes
loguniform_var = u3__FREE 1e-5 1e-1 #dephosphorylation of Sos1 feedback site
loguniform_var = sigma__FREE 0.1 10 # hypersensitive sampling parameter 
loguniform_var = scalepEGFR__FREE 3.0e-05 6.0e-05 #scaling factor for pEGFR output
loguniform_var = scalepERK__FREE 2.0e-06 5.0e-06    #scaling factor for pERK output
loguniform_var = scalepSos1__FREE 0.00009 0.0003   #scaling factor for pSos1 output 

#manually indicate where to start sampling for each paramete
#useful for using optimization output as a start for MCMC
#first value corresponds to first adjustable parameter listed, each value after is followed by a space and corresponds to parameters doing down the list
starting_params = 0.0008576067553095475 0.00044229730334415375 5.0 5.2709948217252634e-05 3.891540224026214e-06 0.00020032075222804925

# Print output to terminal
verbosity=0
##
##